// <auto-generated />
using System;
using CsMarket.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CsMarket.Migrations
{
    [DbContext(typeof(MarketContext))]
    partial class MarketContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CsMarket.Data.Entities.Asset", b =>
                {
                    b.Property<long>("AssetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("AssetId"));

                    b.Property<long>("ClassNameClassId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("OwnerSteamId32")
                        .HasColumnType("integer");

                    b.HasKey("AssetId");

                    b.HasIndex("ClassNameClassId");

                    b.HasIndex("OwnerSteamId32");

                    b.ToTable("Assets");
                });

            modelBuilder.Entity("CsMarket.Data.Entities.AssetClass", b =>
                {
                    b.Property<long>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ClassId"));

                    b.Property<string>("IconUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MarketHashName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ClassId");

                    b.ToTable("AssetClass");
                });

            modelBuilder.Entity("CsMarket.Data.Entities.Listing", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<long>("AssetId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("State")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.ToTable("Listings");
                });

            modelBuilder.Entity("CsMarket.Data.Entities.User", b =>
                {
                    b.Property<int>("SteamId32")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SteamId32"));

                    b.Property<string>("AvatarHash")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<long>("SignupUnixMilli")
                        .HasColumnType("bigint");

                    b.Property<string>("TradeLink")
                        .HasColumnType("text");

                    b.HasKey("SteamId32");

                    b.ToTable("User");
                });

            modelBuilder.Entity("CsMarket.Data.Entities.Asset", b =>
                {
                    b.HasOne("CsMarket.Data.Entities.AssetClass", "ClassName")
                        .WithMany()
                        .HasForeignKey("ClassNameClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CsMarket.Data.Entities.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerSteamId32")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClassName");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("CsMarket.Data.Entities.Listing", b =>
                {
                    b.HasOne("CsMarket.Data.Entities.Asset", "Asset")
                        .WithMany()
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");
                });
#pragma warning restore 612, 618
        }
    }
}
